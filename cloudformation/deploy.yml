AWSTemplateFormatVersion: '2010-09-09'

# Parameters
Parameters:
  ImageUrl:
    Type: String
    Description: "Docker image URL for the FastAPI app"

  VpcId:
    Type: AWS::EC2::VPC::Id
    Description: "VPC where resources will be deployed"

  PublicSubnet1:
    Type: AWS::EC2::Subnet::Id
    Description: "First public subnet"

  PublicSubnet2:
    Type: AWS::EC2::Subnet::Id
    Description: "Second public subnet"

# Resources
Resources:
  # S3 Bucket for storing text-to-speech files
  S3Bucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Sub "my-app-bucket-${AWS::AccountId}-${AWS::Region}"

  # IAM Role for ECS Task Execution
  TaskExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: ecs-tasks.amazonaws.com
            Action: sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/AmazonEC2ContainerRegistryFullAccess
        - arn:aws:iam::aws:policy/service-role/AmazonECSTaskExecutionRolePolicy

  # Security Group for ECS and ALB
  MySecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties: 
      VpcId: !Ref VpcId
      GroupDescription: "Security group for ECS tasks and ALB"
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          CidrIp: 0.0.0.0/0

  # Application Load Balancer (ALB)
  ApplicationLoadBalancer:
    Type: AWS::ElasticLoadBalancingV2::LoadBalancer
    Properties:
      Scheme: internet-facing
      SecurityGroups:
        - !Ref MySecurityGroup
      Subnets:
        - !Ref PublicSubnet1
        - !Ref PublicSubnet2

  # ALB Target Group
  ALBTargetGroup:
    Type: AWS::ElasticLoadBalancingV2::TargetGroup
    Properties:
      HealthCheckIntervalSeconds: 30
      HealthCheckPath: /
      HealthCheckPort: traffic-port
      HealthCheckProtocol: HTTP
      HealthCheckTimeoutSeconds: 5
      HealthyThresholdCount: 5
      UnhealthyThresholdCount: 2
      Matcher:
        HttpCode: 200
      Port: 80
      Protocol: HTTP
      VpcId: !Ref VpcId
      TargetType: ip

  # ALB Listener
  ALBListener:
    Type: AWS::ElasticLoadBalancingV2::Listener
    Properties:
      DefaultActions:
        - Type: forward
          TargetGroupArn: !Ref ALBTargetGroup
      LoadBalancerArn: !Ref ApplicationLoadBalancer
      Port: 80
      Protocol: HTTP

  # ECS Cluster
  MyECSCluster:
    Type: AWS::ECS::Cluster

  # ECS Task Definition
  MyECSTaskDefinition:
    Type: AWS::ECS::TaskDefinition
    Properties:
      Family: my-fastapi-app
      NetworkMode: awsvpc
      RequiresCompatibilities:
        - FARGATE
      Cpu: 256
      Memory: 512
      ExecutionRoleArn: !GetAtt TaskExecutionRole.Arn
      ContainerDefinitions:
        - Name: fastapi-container
          Image: !Ref ImageUrl
          PortMappings:
            - ContainerPort: 8000
          LogConfiguration:
            LogDriver: awslogs
            Options:
              awslogs-group: /ecs/my-fastapi-app
              awslogs-region: !Ref "AWS::Region"
              awslogs-stream-prefix: ecs

  # ECS Service
  MyECSService:
    Type: AWS::ECS::Service
    Properties:
      Cluster: !Ref MyECSCluster
      TaskDefinition: !Ref MyECSTaskDefinition
      DesiredCount: 1
      LaunchType: FARGATE
      LoadBalancers:
        - ContainerName: fastapi-container
          ContainerPort: 8000
          TargetGroupArn: !Ref ALBTargetGroup
      NetworkConfiguration:
        AwsvpcConfiguration:
          AssignPublicIp: ENABLED
          SecurityGroups:
            - !Ref MySecurityGroup
          Subnets:
            - !Ref PublicSubnet1
            - !Ref PublicSubnet2

Outputs:
  S3BucketName:
    Description: "Name of the S3 Bucket"
    Value: !Ref S3Bucket

  IAMRoleArn:
    Description: "ARN of the IAM Role"
    Value: !GetAtt TaskExecutionRole.Arn

  ALBDNSName:
    Description: "DNS Name of the Application Load Balancer"
    Value: !GetAtt ApplicationLoadBalancer.DNSName

